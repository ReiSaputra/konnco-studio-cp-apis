// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id          String @id @default(uuid()) @db.VarChar(255)
  name        String @db.VarChar(255)
  password    String @db.VarChar(255)
  email       String @unique @db.VarChar(255)
  phoneNumber String @unique @db.VarChar(255) @map("phone_number")

  blogs   Blog[]
  careers Career[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("admins")

  @@map("admins")
}

model Blog {
  id          String @id @default(uuid()) @db.VarChar(255)
  title       String @db.VarChar(255)
  description String @db.Text
  slug        String @db.VarChar(255)

  authorId String @map("author_id") @db.VarChar(255)
  author   Admin  @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("blogs")
}

model Career {
  id            Int        @id @default(autoincrement())
  title         String     @db.VarChar(255)
  description   String     @db.Text
  salary        String     @db.VarChar(255)
  tags          String     @db.Text
  type          CareerType
  linkedInInfo  String     @map("linkedin_info") @db.VarChar(255)
  glintsInfo    String     @map("glints_info") @db.VarChar(255)
  jobStreetInfo String     @map("jobstreet_info") @db.VarChar(255)

  authorId String @map("author_id") @db.VarChar(255)
  author   Admin  @relation(fields: [authorId], references: [id])

  applications Application[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("careers")
}

model Application {
  id              String        @id @default(uuid()) @db.VarChar(255)
  applicantName   String        @map("applicant_name") @db.VarChar(255)
  email           String        @db.VarChar(255)
  phoneNumber     String        @db.VarChar(255)
  educationType   EducationType @map("education_type")
  instituteName   String        @map("institute_name") @db.VarChar(255)
  companyName     String        @map("company_name") @db.VarChar(255)
  position        String        @db.VarChar(255)
  lengthOfService String        @map("length_of_service") @db.VarChar(255)
  skills          String        @db.Text
  letter          String        @db.Text

  careerId Int    @map("career_id")
  career   Career @relation(fields: [careerId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")

  @@map("applications")
}

enum CareerType {
  UI_UX
  WEB
  MOBILE
  DESKTOP
  SYSTEM_ANALYST
  QUALITY_ASSURANCE
  DATA_ANALYST
  GENERAL_AFFAIR
  MARKETING
  ACCOUNTING
}

enum EducationType {
  SD
  SMP
  SMA
  SMK
  D3
  D4
  S1
  S2
  S3
}

model Inquiry {
  id         String @id @default(uuid()) @db.VarChar(255)
  senderName String @map("sender_name") @db.VarChar(255)
  email      String @db.VarChar(255)
  subject    String @db.VarChar(255)
  message    String @db.Text

  createdAt DateTime @default(now()) @map("created_at")

  @@map("inquiries")
}
